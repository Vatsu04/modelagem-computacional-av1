IMPORTAR numpy COMO np
IMPORTAR math
IMPORTAR Functions.simulation COMO Simulation
IMPORTAR Functions.technician COMO Technician
DE Functions.env IMPORTAR Environment 
DE datetime IMPORTAR timedelta
DE Functions.name_generator IMPORTAR generate_ticket_opener_names, generate_technician_names, generate_ticket_title
DE Functions.time_functions IMPORTAR format_time, realistic_call_interval, realistic_resolution_time


CONSTANTE SIM_DURATION <- 3600

VARIAVEL technicians <- generate_technician_names(5)
VARIAVEL callers <- generate_ticket_opener_names(10)

VARIAVEL env <- Environment()
VARIAVEL ARRAY technician_pool <- [Technician.Technician(env, tech) PARA tech EM technicians]
VARIAVEL ARRAY call_log <- []


env.process(call_generator(env, call_log, technician_pool))
env.run(until <- SIM_DURATION)

VARIAVEL ARRAY resolved_calls <- [call PARA call EM call_log SE call.start_time == !(NULO) && call.end_time == !(NULO)]

VARIAVEL ARRAY unresolved_calls <- [call PARA call EM call_log SE call.unresolved]

VARIAVEL ARRAY response_times <- [(call.end_time - call.start_time) PARA call in resolved_calls SE call.end_time >= call.start_time]

SE response_times:
    VARIAVEL average_response_time <- np.mean(response_times)
    average_response_time <- max(0, average_response_time)
    average_response_time_rounded <- math.ceil(average_response_time)
    average_response_time_formatted <- str(timedelta(seconds <- average_response_time_rounded))
SENAO 
    average_response_time_formatted <- "N/A"
FIM SE

ESCREVA("\n --- RESULTADOS DA SIMULAÇÃO ---")
ESCREVA("\nTempo médio de resposta: " + average_response_time_formatted)
ESCREVA("\nTotal de chamados resolvidos: " + len(resolved_calls))
ESCREVA("\nTotal de chamados não resolvidos: " + len(unresolved_calls))
        
